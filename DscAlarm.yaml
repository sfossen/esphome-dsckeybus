#for documentation see project at https://github.com/Dilbert66/esphome-dsckeybus
substitutions:
  systemName: "dscalarm"
  accessCode: !secret access_code #Only comes into effect if a password prompt occurs when arming eg. night mode
  cmdWaitTime: "0" # milliseconds.  set how long to delay before accepting a new 05 cmd as valid to filter out intermittent short duration bogus commands that some panels send. default = 0

esphome:
  name: $systemName
  platform: ESP8266
  board: nodemcuv2
  
  includes:
    - dscKeybusInterface/

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "$systemName"
    password: !secret wifi_password

logger:
  baud_rate: 0
  level: info

api:
   password: !secret api_password  
      
   
ota:
   password: !secret ota_password
   safe_mode: True
   
status_led:
  pin:
    number: D4
    inverted: yes

custom_component:
- lambda: |-
    auto DSCkeybus = new DSCkeybushome();
    
    DSCkeybus->accessCode="$accessCode";
    DSCkeybus->debug=2; // 0 = off, 1 = status change data, 2 = + 05/27 packets, 3 = + all packets received
    
    DSCkeybus->onSystemStatusChange([&](std::string statusCode) {
       id(system_status).publish_state(statusCode);
    });
    DSCkeybus->onPartitionStatusChange([&](uint8_t partition,std::string statusCode) {
       switch(partition) {
         case 1: id(p1).publish_state(statusCode); break;
      }
    });
    DSCkeybus->onPartitionMsgChange([&](uint8_t partition,std::string msg) {
       switch(partition) {
         case 1: id(m1).publish_state(msg); break;
      }
    });
    DSCkeybus->onTroubleStatusChange([&](troubleStatus ts,bool open) {
        switch(ts) {
            case trStatus: id(tr).publish_state(open);break;
            case batStatus: id(bat).publish_state(open);break;
            case acStatus: id(ac).publish_state(open);break;
            case panicStatus: id(panic).publish_state(open);break;
            default: break;
        }
    });
    DSCkeybus->onFireStatusChange([&](uint8_t partition, bool open) {
      switch (partition) {
          case 1: id(f1).publish_state(open); break;
      }
    });
    DSCkeybus->onZoneStatusChange([&](uint8_t zone, bool open) {
      switch (zone) {
        case 1: id(z1).publish_state(open); break;
        case 2: id(z2).publish_state(open); break;
        case 3: id(z3).publish_state(open); break;
        case 4: id(z4).publish_state(open); break;
        case 5: id(z5).publish_state(open); break;
        case 6: id(z6).publish_state(open); break;
        case 7: id(z7).publish_state(open); break;
        case 8: id(z8).publish_state(open); break;
        case 9: id(z9).publish_state(open); break;
        case 10: id(z10).publish_state(open); break;
        case 11: id(z11).publish_state(open); break;
        case 12: id(z12).publish_state(open); break;
        case 13: id(z13).publish_state(open); break;
        case 14: id(z14).publish_state(open); break;
        case 15: id(z15).publish_state(open); break;
        case 16: id(z16).publish_state(open); break;
      }
    });
    DSCkeybus->onZoneAlarmChange([&](uint8_t zone, bool open) {
      switch (zone) {
        case 1: id(za1).publish_state(open); break;
        case 2: id(za2).publish_state(open); break;
        case 3: id(za3).publish_state(open); break;
        case 4: id(za4).publish_state(open); break;
        case 5: id(za5).publish_state(open); break;
        case 6: id(za6).publish_state(open); break;
      }
    });
    return {DSCkeybus};

binary_sensor:
    #zone status
  - platform: template
    id: z1
    name: "$systemName Front & Garage door"
    device_class: door
  - platform: template
    id: z2
    name: "$systemName Entryway motion"
    device_class: motion
  - platform: template
    id: z3
    name: "$systemName Dining room motion"
    device_class: motion
  - platform: template
    id: z4
    name: "$systemName Family room motion"
    device_class: motion
  - platform: template
    id: z5
    name: "$systemName Office motion"
    device_class: motion
  - platform: template
    id: z6
    name: "$systemName Basement motion"
    device_class: motion
  - platform: template
    id: z7
    name: "$systemName Office or Laundry"
    device_class: window
  - platform: template
    id: z8
    name: "$systemName Family room windows"
    device_class: window
  - platform: template
    id: z9
    name: "$systemName Nook windows"
    device_class: window
  - platform: template
    id: z10
    name: "$systemName Back door"
    device_class: door
  - platform: template
    id: z11
    name: "$systemName Dining room door"
    device_class: door
  - platform: template
    id: z12
    name: "$systemName Living room"
    device_class: window
  - platform: template
    id: z13
    name: "$systemName Yasmine Bedroom"
    device_class: window
  - platform: template
    id: z14
    name: "$systemName Basement East"
    device_class: window
  - platform: template
    id: z15
    name: "$systemName Basement Slider"
    device_class: door
  - platform: template
    id: z16
    name: "$systemName Basement South"
    device_class: window
    
    #zone alarm status
  - platform: template
    id: za1
    name: "$systemName Front door alarm"
    #device_class: safety
  - platform: template
    id: za2
    name: "$systemName Garage door alarm"
    #device_class: safety
  - platform: template
    id: za3
    name: "$systemName Back door alarm"
    #device_class: safety
  - platform: template
    id: za4
    name: "$systemName Living room window alarm"
    #device_class: safety
  - platform: template
    id: za5
    name: "$systemName Zones 5-8"
    #device_class: safety
  - platform: template
    id: za6
    name: "$systemName Zones 9-16"
    #device_class: safety
    
  - platform: template
    id: tr
    name: "$systemName Trouble Status"
    device_class: problem
  - platform: template
    id: bat
    name: "$systemName Battery Status"
    device_class: problem

  - platform: template
    id: ac
    name: "$systemName AC Status"
    device_class: plug

  - platform: template
    id: panic
    name: "$systemName Panic Status"
    device_class: safety
    
  - platform: template
    id: f1
    device_class: safety
    name: "$systemName Fire Status"
  
text_sensor:
  - platform: template
    id: system_status
    name: "$systemName System Status"
    icon: "mdi:shield"
  - platform: template
    id: p1
    name: "$systemName Partition 1 Status "
    icon: "mdi:shield"
  - platform: template
    id: m1
    name: "$systemName Partition 1 Msg "
    icon: "mdi:alert-box"

     
switch:
  - platform: template
    name: "$systemName Connection"
    id: connection_status_switch
    lambda: |-
      return dsc.keybusConnected;
    icon: "mdi:shield-link-variant"
    turn_on_action:
      - switch.toggle: restart_switch
    turn_off_action:
      - lambda: |-
          disconnectKeybus();
  - platform: restart
    id: restart_switch

